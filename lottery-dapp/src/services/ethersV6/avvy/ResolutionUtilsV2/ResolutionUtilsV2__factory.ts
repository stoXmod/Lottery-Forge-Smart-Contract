/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from 'ethers';
import type {
  ResolutionUtilsV2,
  ResolutionUtilsV2Interface,
} from './ResolutionUtilsV2';

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'key',
        type: 'uint256',
      },
    ],
    name: 'resolveStandard',
    outputs: [
      {
        internalType: 'string',
        name: 'value',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'addy',
        type: 'address',
      },
    ],
    name: 'reverseResolveEVMToName',
    outputs: [
      {
        internalType: 'string',
        name: 'preimage',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

export class ResolutionUtilsV2__factory {
  static readonly abi = _abi;
  static createInterface(): ResolutionUtilsV2Interface {
    return new Interface(_abi) as ResolutionUtilsV2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ResolutionUtilsV2 {
    return new Contract(address, _abi, runner) as unknown as ResolutionUtilsV2;
  }
}
